[{"categories":["作品集"],"contents":"","permalink":"https://skar5268.github.io/blog/%E6%B5%B7%E5%A0%B1%E8%A8%AD%E8%A8%88/","tags":[""],"title":"海報設計"},{"categories":["作品集"],"contents":"","permalink":"https://skar5268.github.io/blog/%E9%9B%BB%E5%95%86%E5%9C%96%E7%89%87/","tags":[""],"title":"電商圖片"},{"categories":["常用語法"],"contents":"// http://meyerweb.com/eric/tools/css/reset/ // v2.0 | 20110126 // License: none (public domain) html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video margin: 0 padding: 0 border: 0 font-size: 100% font: inherit vertical-align: baseline /* HTML5 display-role reset for older browsers */ article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section display: block body line-height: 1 ol, ul list-style: none blockquote, q quotes: none blockquote:before, blockquote:after, q:before, q:after content: \u0026#39;\u0026#39; content: none table border-collapse: collapse border-spacing: 0 *, *::before, *::after box-sizing: border-box a display: block text-decoration: none img display: block object-fit: cover height: auto max-width: 100% ","permalink":"https://skar5268.github.io/blog/css-reset/","tags":null,"title":"CSS Reset"},{"categories":["常用語法"],"contents":"Pug .carousel h2.container-title 精選文章 .carousel-cards .carousel-card a(href=\u0026#34;#\u0026#34;) img(src=\u0026#34;../img/article-image1.png\u0026#34; alt=\u0026#34;Vision Pro 登場！Vision Pro UI/UX 設計重點大公開 (上)\u0026#34;) h3 Vision Pro 登場！Vision Pro UI/UX 設計重點大公開 (上) .content span.tag UI/UX 新知 span.date 2024/02/10 .carousel-card a(href=\u0026#34;#\u0026#34;) img(src=\u0026#34;../img/article-image2.png\u0026#34; alt=\u0026#34;給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (下)\u0026#34;) h3 給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (下) .content span.tag UI/UX 新知 span.date 2023/11/20 .carousel-card a(href=\u0026#34;#\u0026#34;) img(src=\u0026#34;../img/article-image3.png\u0026#34; alt=\u0026#34;給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (上)\u0026#34;) h3 給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (上) .content span.tag UI/UX 新知 span.date 2023/10/18 .carousel-card.d-sm-none a(href=\u0026#34;#\u0026#34;) img(src=\u0026#34;../img/article-image1.png\u0026#34; alt=\u0026#34;Vision Pro 登場！Vision Pro UI/UX 設計重點大公開 (上)\u0026#34;) h3 Vision Pro 登場！Vision Pro UI/UX 設計重點大公開 (上) .content span.tag UI/UX 新知 span.date 2024/02/10 .carousel-card.d-sm-none a(href=\u0026#34;#\u0026#34;) img(src=\u0026#34;../img/article-image2.png\u0026#34; alt=\u0026#34;給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (下)\u0026#34;) h3 給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (下) .content span.tag UI/UX 新知 span.date 2023/11/20 .carousel-card.d-sm-none a(href=\u0026#34;#\u0026#34;) img(src=\u0026#34;../img/article-image3.png\u0026#34; alt=\u0026#34;給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (上)\u0026#34;) h3 給設計師和工程師的 Figma-Dev Mode 開發模式使用指南 (上) .content span.tag UI/UX 新知 span.date 2023/10/18 .carousel-dots .dot .dot .dot .dot .dot Sass .carousel max-width: 1296px margin: 0 auto padding: 120px 0 overflow: hidden .carousel-cards display: flex @include smscreen flex-direction: column margin: 0 12px .carousel-card flex:0 0 30% margin-right: 5% transform: translateX(0) transition: transform 1s @include pad flex:0 0 48% margin: 1% @include smscreen flex:0 0 98% a color: $primary margin-bottom: 40px img border-radius: 8px margin-bottom: 16px h3 padding: 0 8px font-size: 20px line-height: 24px margin-bottom: 16px font-weight: bold .content padding: 0 8px display: flex justify-content: space-between .tag padding: 4px 12px border-radius: 16px background-color: $light-white color: $primary margin-right: 16px .date color: $secondary .carousel-dots max-width: 124px margin: 0 auto display: flex justify-content: space-between @include smscreen display: none .dot width: 10px height: 10px background-color: #E9E9E9 border-radius: 50% \u0026amp;:hover cursor: pointer JS const carouselCards = document.querySelector(\u0026#34;.carousel-cards\u0026#34;) const carouselCard = document.querySelectorAll(\u0026#34;.carousel-card\u0026#34;) const dot = document.querySelectorAll(\u0026#34;.dot\u0026#34;) let num = 0; if (diWidth \u0026gt; 375 \u0026amp;\u0026amp; dot[0] \u0026amp;\u0026amp; carouselCards) { for (d = 0; d \u0026lt; dot.length; d++) dot[d].dataset.num = d dot.forEach(function (item) { item.addEventListener(\u0026#34;click\u0026#34;, function (e) { let active = e.target.dataset.num num = active - 1 changeCard() }); }); dot[0].style.backgroundColor = \u0026#34;#000000\u0026#34;; let interval = setInterval(changeCard, 2500); } ","permalink":"https://skar5268.github.io/blog/%E5%9C%96%E7%89%87%E8%BC%AA%E6%92%AD/","tags":["Swiper"],"title":"圖片輪播"},{"categories":["JavaScript"],"contents":" 成品\n其實我現在還是不太懂時間角度的算法，數學都還給老師ㄌ。 因此試著紀錄看看，說不定會比較能理解？\n一、首先需要一個時鐘，並設定秒針、時針、分針樣式 這邊直接拿教材使用，所以沒什麼好講解ㄉ\n二、取得時間 const now = new Date(); /*取得現在時間*/ const seconds = now.getSeconds(); // 取得秒鐘 const minutes = now.getMinutes(); // 取得分鐘 const hours = now.getHours(); // 取得小時 三、取得秒針、分針、時針的角度 let secondsDegrees = seconds / 60 * 360 + 90; let minutesDegrees = (minutes / 60) * 360 + 90 + ((seconds / 60) * (360 / 60)); let hoursDegrees = (hours / 12) * 360 + 90 + ((minutes / 60) * (360 / 12)); 秒針角度： 秒針走一圈是 60 秒，因此秒鐘 / 60 = 秒針所在的位置。 由於時鐘是圓形的，且時鐘的起點是 90 度，所以秒針的角度為秒針所在的位置 * 360 後再 + 90。\n分針角度： 分針走一圈是 60 分鐘，因此分鐘 / 60 = 分針所在的位置。 由於時鐘是圓形的，且時鐘的起點是 90 度，所以分針的角度為分針所在的位置 * 360 後再 + 90。 然而秒針也會影響分針的角度，秒針走一圈，分針會走一格（一分鐘）。換句話說， 分針一秒鐘會移動 1 度。 因此實際分針的角度為：先前所得出的分針角度 + 秒數\n時針角度： 時針走一圈是 12 小時，因此小時 / 12 = 時針所在的位置。 由於時鐘是圓形的，且時鐘的起點是 90 度，所以時針的角度為時針所在的位置 * 360 後再 + 90。 然而分針也會影響時針的角度，分針走一圈，時針會走一格（一小時）。換句話說， 時針一分鐘會移動 0.5 度。 因此實際時針的角度為：先前算出的角度 + 分鐘 * 0.5\n簡化後程式碼：\nlet secondsDegrees = (seconds / 60) * 360 + 90; let minutesDegrees = (minutes / 60) * 360 + 90 + seconds; let hoursDegrees = (hours / 12) * 360 + 90 + (minutes * 0.5); 四、取得 DOM，並給予他們樣式（目前時間的角度） const secondHand = document.querySelector(\u0026#39;.second-hand\u0026#39;); const minHand = document.querySelector(\u0026#39;.min-hand\u0026#39;); const hourHand = document.querySelector(\u0026#39;.hour-hand\u0026#39;); secondHand.style.transform = `rotate(${secondsDegrees}deg)`; minHand.style.transform = `rotate(${minutesDegrees}deg)`; hourHand.style.transform = `rotate(${hoursDegrees}deg)`; 五、設定秒、分、時針每秒移動的角度 function setDate() { hoursDegrees = hoursDegrees + 360 / (12 * 60 * 60); // 一秒鐘移動 1/120 度 minutesDegrees = minutesDegrees + 360 / (60 * 60); // 一秒鐘移動 1 度 secondsDegrees = secondsDegrees + 360 / 60; // 一秒鐘移動 6 度 secondHand.style.transform = `rotate(${secondsDegrees}deg)`; minHand.style.transform = `rotate(${minutesDegrees}deg)`; hourHand.style.transform = `rotate(${hoursDegrees}deg)`; } 簡化後程式碼\nfunction setDate() { hoursDegrees = hoursDegrees + 1/120; minutesDegrees = minutesDegrees + 1; secondsDegrees = secondsDegrees + 6; secondHand.style.transform = `rotate(${secondsDegrees}deg)`; minHand.style.transform = `rotate(${minutesDegrees}deg)`; hourHand.style.transform = `rotate(${hoursDegrees}deg)`; } 六、執行函式 setInterval(setDate, 1000) ","permalink":"https://skar5268.github.io/blog/js-clock/","tags":["JS 30"],"title":"JS Clock"},{"categories":["部落格架站教學"],"contents":" Hexo 起源 / Hexo 官網 一、環境建置 安裝 Node.js\n安裝 Git\n確認是否安裝成功\nnode -v npm -v git --version 安裝 Hexo npm install -g hexo-cli 建立平台 hexo init 部落格資料夾名稱 二、部落格文章 建立部落格文件 hexo new \u0026#39;部落格文章名稱\u0026#39; 使用 Markdown 語法 撰寫文章\ntitle 為文章標題\n三、其餘指令說明 於本機打開部落格預覽 hexo server 部署至網頁的資料夾 hexo generate 清除快取 hexo clean 將部落格部屬到 Github Pages hexo deploy 新增部落格頁面 hexo new page 頁面名稱 輸入指令後，將於 source 資料夾內新增頁面名稱的資料夾\n四、部落格相關設定 部落格基本資料 於 themes \u0026gt; config.yml 修改，以本部落格為例 title: 阿若的 Hexo 部落格 subtitle: Hexo 部落格 description: 還不知道要放什麼東西 keywords: author: 阿若 language: zh-TW timezone: \u0026#39;\u0026#39; 部落格客製化 安裝客製化樣板 git clone --depth 1 https://github.com/hexojs/hexo-theme-landscape themes/landscape themes 資料夾內將新增 landscape 資料夾 在 landscape \u0026gt; source \u0026gt; config.yml 可以修改 menu 等資料 五、部屬到 GitHub 上 將 VS code 綁定 GitHub 帳戶 在 GitHub 上 create new repository 在 GitHub Pages 上部署 Hexo npm install hexo-deployer-git --save 在資料夾最上層的 config.yml 檔案中，滑到最下面的 deploy 區塊（第 103 行），將下面程式碼貼上去 deploy: type: git repo: https://github.com/\u0026lt;username\u0026gt;/\u0026lt;project\u0026gt; # example, https://github.com/hexojs/hexojs.github.io branch: gh-pages 於同樣的 config.yml 檔案中找到 URL（第 16 行），修改網址為自己的 教學連結 清除快取 \u0026amp; 將部落格部屬到 Github Pages hexo clean \u0026amp;\u0026amp; hexo deploy 確認 GitHub pages 是否成功顯示\n套用其他模板\n安裝模板後，於資料夾最上層的 config.yml 檔案中，第 99 行 theme 改成安裝的模板\n","permalink":"https://skar5268.github.io/blog/hexo-%E6%9E%B6%E7%AB%99%E6%AD%A5%E9%A9%9F/","tags":null,"title":"Hexo 架站步驟"},{"categories":["部落格架站教學"],"contents":"","permalink":"https://skar5268.github.io/blog/hugo-%E6%9E%B6%E7%AB%99%E6%AD%A5%E9%A9%9F/","tags":null,"title":"Hugo 架站步驟"},{"categories":["works"],"contents":"網站連結 ","permalink":"https://skar5268.github.io/blog/%E4%BD%9C%E5%93%81%E9%9B%86-03/","tags":["HTML","CSS"],"title":"履歷表"},{"categories":["works"],"contents":"網站連結 ","permalink":"https://skar5268.github.io/blog/%E4%BD%9C%E5%93%81%E9%9B%86-02/","tags":["JavaScript"],"title":"高雄旅遊網站"},{"categories":["works"],"contents":"DEMO 簡介 設計稿為「2020 六角學院前端工程師學習體驗營」所提供的版型，以 Bootstrap4 切版，包含響應式、漢堡選單、Modal 等設計。\n","permalink":"https://skar5268.github.io/blog/%E4%BD%9C%E5%93%81%E9%9B%86-01/","tags":["Bootstrap4"],"title":"d'Perfume"}]